// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  password  String     @unique
  contact   String
  orders    Order[]
  wishlists Wishlist[]
  cart      Cart?
  payment   Payment?
  rating    Rating[]
}

model Product {
  id     String   @id @default(uuid())
  refID  String
  orders Order[]
  cart   Cart?    @relation(fields: [cartId], references: [id])
  cartId String?
  rating Rating[]
}

model Order {
  id         String    @id @default(uuid())
  product    Product   @relation(fields: [productId], references: [id])
  productId  String
  customer   Customer  @relation(fields: [customerId], references: [id])
  customerId String
  shipping   Shipping?
  payment    Payment   @relation(fields: [paymentId], references: [id])
  paymentId  String    @unique
}

model Wishlist {
  id         String   @id @default(uuid())
  name       String
  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId String
}

model Cart {
  id         String    @id @default(uuid())
  customer   Customer  @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId String    @unique
  products   Product[]
}

model Shipping {
  id      String         @id @default(uuid())
  status  ShippingStatus
  order   Order          @relation(fields: [orderId], references: [id])
  orderId String         @unique
}

model Payment {
  id         String        @id @default(uuid())
  status     PaymentStatus
  customer   Customer      @relation(fields: [customerId], references: [id])
  customerId String        @unique
  order      Order[]
}

model Rating {
  id         String   @id @default(uuid())
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId  String
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String

  @@unique([productId, customerId])
}

enum PaymentStatus {
  PAID
  UNPAID
  PENDING
}

enum ShippingStatus {
  SHIPPED
  DELIVERED
}
